{"version":3,"sources":["components/InputText.tsx","components/AddButton.tsx","components/RemoveButton.tsx","components/Form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InputText","type","name","className","AddButton","arrayHelpers","text","onClick","push","RemoveButton","index","remove","SubmitButton","values","useFormikContext","useState","result","setResult","useEffect","companyUsers","rest","state","buttonRef","createRef","handleOpenDialog","e","current","open","handleRemoveFile","removeFile","ref","onFileLoad","data","console","log","employees","length","element","employee","onError","err","noClick","noDrag","config","style","onRemoveFile","file","href","encodeURIComponent","JSON","stringify","download","SignupForm","initialValues","address","campaigns","code","contactEmail","contactPhone","enabledApps","locations","logo","web","companyCode","role","surname","username","password","onSubmit","htmlFor","render","map","campaign","enabledApp","location","companyUser","App","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5341f81.chunk.js","sourcesContent":["import { Field } from 'formik';\r\n\r\n\r\nconst InputText = ({type, name} : {type: string, name: string}) => {\r\n  return (\r\n    <Field type={type} name={name} className=\"pl-2 rounded py-2 bg-blue-100 text-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-700 border border-blue-600\" />\r\n  )\r\n}\r\n\r\nexport default InputText;","import { FieldArrayRenderProps } from \"formik\";\r\n\r\nconst AddButton = ({ arrayHelpers, text }: { arrayHelpers: FieldArrayRenderProps, text: string }) => (\r\n  <button\r\n    className=\"bg-blue-500 rounded-md w-64 mt-3 text-white p-2\"\r\n    type=\"button\"\r\n    onClick={() => arrayHelpers.push('')}>\r\n    {text}\r\n  </button>\r\n)\r\n\r\nexport default AddButton;","import { FieldArrayRenderProps } from \"formik\";\r\n\r\nconst RemoveButton = ({ arrayHelpers, text, index }: { arrayHelpers: FieldArrayRenderProps, text: string, index: number }) => (\r\n  <button\r\n    className=\"bg-red-500 rounded-md ml-1 p-2 text-white\"\r\n    type=\"button\"\r\n    onClick={() => arrayHelpers.remove(index)}\r\n  >\r\n    {text}\r\n  </button>\r\n)\r\n\r\nexport default RemoveButton;","import { Formik, Form, FieldArray, useFormikContext } from 'formik';\r\nimport InputText from './InputText';\r\nimport AddButton from './AddButton';\r\nimport RemoveButton from './RemoveButton';\r\nimport { createRef, useEffect, useState } from 'react';\r\nimport { CompanyUsers, RootObject } from '../Models';\r\nimport { CSVReader } from 'react-papaparse'\r\n\r\nconst SubmitButton = () => {\r\n  const { values } = useFormikContext<RootObject>();\r\n  const [result, setResult] = useState<{\r\n    companies: unknown[];\r\n    companyUsers: CompanyUsers[];\r\n    employees: { name: string; surname: string; participationCode: string; headquarterCode: string; }[];\r\n  }>({\r\n    'companies': [],\r\n    'companyUsers': [],\r\n    'employees': []\r\n  });\r\n\r\n  useEffect(() => {\r\n    const { companyUsers, ...rest } = values;\r\n    setResult(state => ({\r\n      ...state,\r\n      'companies': [rest],\r\n      'companyUsers': companyUsers,\r\n    }))\r\n  }, [values]);\r\n\r\n  const buttonRef = createRef<CSVReader>()\r\n\r\n  const handleOpenDialog = (e: any) => {\r\n    if (buttonRef.current) {\r\n      buttonRef.current?.open(e)\r\n    }\r\n  }\r\n\r\n  const handleOnFileLoad = (data: any) => {\r\n    console.log('--------------------------- here is your data')\r\n    const employees: { name: string; surname: string; participationCode: string; headquarterCode: string; }[] = [];\r\n    for (let index = 1; index < data.length; index++) {\r\n      const element = data[index].data;\r\n      const employee = {\r\n        \"name\": element[0],\r\n        \"surname\": element[1],\r\n        \"participationCode\": element[2],\r\n        \"headquarterCode\": element[3]\r\n      }\r\n      employees.push(employee);\r\n    }\r\n    setResult(state => ({\r\n      ...state,\r\n      employees: employees\r\n    }))\r\n  }\r\n\r\n  const handleOnError = (err: any) => {\r\n    console.log(err)\r\n  }\r\n\r\n  const handleOnRemoveFile = (data: any) => {\r\n    console.log(data)\r\n  }\r\n\r\n  const handleRemoveFile = (e: any) => {\r\n    // Note that the ref is set async, so it might be null at some point\r\n    if (buttonRef.current) {\r\n      buttonRef.current.removeFile()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CSVReader\r\n        ref={buttonRef}\r\n        onFileLoad={handleOnFileLoad}\r\n        onError={handleOnError}\r\n        noClick\r\n        noDrag\r\n        config={{}}\r\n        style={{}}\r\n        onRemoveFile={handleOnRemoveFile}\r\n      >\r\n        {({ file }: { file: File }) => (\r\n          <div className=\"flex flex-col mt-4 border border-gray-500 rounded-md p-2\">\r\n            <button\r\n              type='button'\r\n              onClick={handleOpenDialog}\r\n              className=\"bg-blue-500 rounded-md w-64 mt-3 text-white p-2 mx-auto cursor-pointer\"\r\n            >\r\n              Browse Employees file (.csv)\r\n            </button>\r\n            <div className=\"bg-blue-200 rounded-md w-64 mt-3 text-white p-2 mx-auto cursor-pointer\">\r\n              {file && file.name}\r\n            </div>\r\n            <button\r\n              className=\"bg-red-500 rounded-md w-64 mt-3 text-white p-2 mx-auto cursor-pointer\"\r\n              type=\"button\"\r\n              onClick={handleRemoveFile}\r\n            >\r\n              Remove Employees File\r\n            </button>\r\n          </div>\r\n        )}\r\n      </CSVReader>\r\n      <a\r\n        className=\"bg-blue-500 rounded-md w-64 mt-3 text-white p-2 mx-auto\"\r\n        href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n          JSON.stringify(result, null, 2)\r\n        )}`}\r\n        download=\"export.json\"> Submit\r\n      </a>\r\n    </>\r\n  )\r\n}\r\n\r\nconst SignupForm = () => {\r\n  const initialValue = {\r\n    address: \"Piazza del Municipio 2, Ferrara, 44121\",\r\n    campaigns: [\r\n      \"ferrara_bike2work\"\r\n    ],\r\n    code: \"comunediferrara\",\r\n    contactEmail: \"urp@comune.fe.it\",\r\n    contactPhone: \"+390532419111\",\r\n    enabledApps: [\r\n      \"ferraraplaygo2020\"\r\n    ],\r\n    locations: [\r\n      {\r\n        \"address\": \"Piazza del Municipio\",\r\n        \"city\": \"Ferrara\",\r\n        \"country\": \"Italy\",\r\n        \"id\": \"main\",\r\n        \"latitute\": 44.836158,\r\n        \"longitude\": 11.619019,\r\n        \"province\": \"Ferrara\",\r\n        \"radius\": 200,\r\n        \"region\": \"Emilia-Romagna\",\r\n        \"streetNumber\": \"2\",\r\n        \"zip\": \"44121\"\r\n      }\r\n    ],\r\n    logo: \"https://www.comune.fe.it/pix/logo.png\",\r\n    name: \"Comune di Ferrara\",\r\n    web: \"https://www.comune.fe.it/\",\r\n    companyUsers: [\r\n      {\r\n        companyCode: \"comunediferrara\",\r\n        name: \"Admin\",\r\n        role: \"ROLE_COMPANY_ADMIN\",\r\n        surname: \"ComuneDiFerrara\",\r\n        username: \"info@test.it\",\r\n        password: \"55MFG%ff\"\r\n      }\r\n    ],\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValue}\r\n      onSubmit={values => console.log(JSON.stringify(values, null, 2))}\r\n    >\r\n      {({ values }) => (\r\n        <Form className=\"flex flex-col text-lg\">\r\n          <div className=\"flex flex-col mt-4 border border-gray-500 rounded-md p-2\">\r\n            <label htmlFor=\"address\" className=\"font-bold\">Address :</label>\r\n            <InputText type=\"text\" name=\"address\" />\r\n          </div>\r\n          <div className=\"flex flex-col mt-4 border border-gray-500 rounded-md p-2\">\r\n            <label htmlFor=\"campaigns\" className=\"font-bold\">Campaigns</label>\r\n            <FieldArray\r\n              name=\"campaigns\"\r\n              render={(arrayHelpers) => (\r\n                <div className=\"flex flex-col mt-1\">\r\n                  {values.campaigns && values.campaigns.length > 0 ? (\r\n                    values.campaigns.map((campaign, index) => (\r\n                      <div className=\"mt-4\" key={index}>\r\n                        <InputText type=\"text\" name={`campaigns.${index}`} />\r\n                        <RemoveButton arrayHelpers={arrayHelpers} text=\"Remove\" index={index} />\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                      <></>\r\n                    )}\r\n                  <AddButton text=\"Add a campaign\" arrayHelpers={arrayHelpers} />\r\n                </div>\r\n              )}\r\n            />\r\n          </div>\r\n          {\r\n            [\r\n              ['code', 'text'],\r\n              ['contactEmail', 'email'],\r\n              ['contactPhone', 'text'],\r\n            ].map((element) => (\r\n              <div className=\"flex flex-col mt-4 border border-gray-500 rounded-md p-2\" key={element[0]}>\r\n                <label htmlFor={element[0]} className=\"font-bold\">{element[0]}</label>\r\n                <InputText type={element[1]} name={element[0]} />\r\n              </div>))\r\n          }\r\n          <div className=\"flex flex-col mt-4 border border-gray-500 rounded-md p-2\">\r\n            <label htmlFor=\"enabledApps\" className=\"font-bold\">Enabled Apps</label>\r\n            <FieldArray\r\n              name=\"enabledApps\"\r\n              render={(arrayHelpers) => (\r\n                <div className=\"flex flex-col mt-1\">\r\n                  {values.enabledApps && values.enabledApps.length > 0 ? (\r\n                    values.enabledApps.map((enabledApp, index) => (\r\n                      <div className=\"mt-4\" key={index}>\r\n                        <InputText type=\"text\" name={`enabledApps.${index}`} />\r\n                        <RemoveButton arrayHelpers={arrayHelpers} text=\"Remove\" index={index} />\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                      <></>\r\n                    )}\r\n                  <AddButton text=\"Add an enabled App\" arrayHelpers={arrayHelpers} />\r\n                </div>\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-col mt-4 border border-gray-500 rounded-md p-2\">\r\n            <label htmlFor=\"locations\" className=\"font-bold\">Locations</label>\r\n            <FieldArray\r\n              name=\"locations\"\r\n              render={(arrayHelpers) => (\r\n                <div className=\"flex flex-col mt-1\">\r\n                  {values.locations && values.locations.length > 0 ? (\r\n                    values.locations.map((location, index) => (\r\n                      <div className=\"flex flex-col mt-2 border border-gray-500 rounded-md p-2\" key={index}>\r\n                        {\r\n                          [\r\n                            ['address', 'text'],\r\n                            ['city', 'text'],\r\n                            ['country', 'text'],\r\n                            ['id', 'text'],\r\n                            ['latitute', 'number'],\r\n                            ['longitude', 'number'],\r\n                            ['province', 'text'],\r\n                            ['radius', 'number'],\r\n                            ['region', 'text'],\r\n                            ['streetNumber', 'text'],\r\n                            ['zip', 'text'],\r\n                          ].map((element) => (\r\n                            <div key={element[0]} className=\"flex flex-col p-2\">\r\n                              <label htmlFor={`locations.${index}.${element[0]}`}>{element[0]}</label>\r\n                              <InputText type={element[1]} name={`locations.${index}.${element[0]}`} />\r\n                            </div>\r\n                          ))\r\n                        }\r\n                        <div className=\"w-50 px-2\">\r\n                          < RemoveButton arrayHelpers={arrayHelpers} text=\"Remove\" index={index} />\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                      <></>\r\n                    )}\r\n                  <AddButton text=\"Add a location\" arrayHelpers={arrayHelpers} />\r\n                </div>\r\n              )}\r\n            />\r\n          </div>\r\n          {\r\n            [\r\n              ['logo', 'text'],\r\n              ['name', 'text'],\r\n              ['web', 'text'],\r\n            ].map((element) => (\r\n              <div className=\"flex flex-col mt-4 border border-gray-500 rounded-md p-2\" key={element[0]}>\r\n                <label htmlFor={element[0]} className=\"font-bold\">{element[0]}</label>\r\n                <InputText type={element[1]} name={element[0]} />\r\n              </div>))\r\n          }\r\n          <div className=\"flex flex-col mt-4 border border-gray-500 rounded-md p-2\">\r\n            <label htmlFor=\"companyUsers\" className=\"font-bold\">Company Users</label>\r\n            <FieldArray\r\n              name=\"companyUsers\"\r\n              render={(arrayHelpers) => (\r\n                <div className=\"flex flex-col mt-1\">\r\n                  {values.companyUsers && values.companyUsers.length > 0 ? (\r\n                    values.companyUsers.map((companyUser, index) => (\r\n                      <div className=\"flex flex-col mt-2 border border-gray-500 rounded-md p-2\" key={index}>\r\n                        {\r\n                          [\r\n                            ['companyCode', 'text', 'Company Code'],\r\n                            ['name', 'text', 'Name'],\r\n                            ['role', 'text', 'Role'],\r\n                            ['surname', 'text', 'Surname'],\r\n                            ['username', 'text', 'Username'],\r\n                            ['password', 'text', 'Password'],\r\n                          ].map((element) => (\r\n                            <div key={element[0]} className=\"flex flex-col p-2\">\r\n                              <label htmlFor={`companyUsers.${index}.${element[0]}`}>{element[2]}</label>\r\n                              <InputText type={element[1]} name={`companyUsers.${index}.${element[0]}`} />\r\n                            </div>\r\n                          ))\r\n                        }\r\n                        <div className=\"w-50 px-2\">\r\n                          <RemoveButton arrayHelpers={arrayHelpers} text=\"Remove\" index={index} />\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                      <></>\r\n                    )}\r\n                  <AddButton text=\"Add a Company User\" arrayHelpers={arrayHelpers} />\r\n                </div>\r\n              )}\r\n            />\r\n          </div>\r\n          <SubmitButton />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import SignupForm from './components/Form';\n\nfunction App() {\n  return (\n    <div className=\"container bg-gray-100 flex flex-col justify-center items-center py-5\">\n      <div>\n        <img src=\"logo.jpg\" alt=\"logo\" className=\"align-center w-56 rounded-full my-5 shadow-lg\" />\n      </div>\n      <div className=\"container md:w-1/2 px-2\">\n        <SignupForm />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}